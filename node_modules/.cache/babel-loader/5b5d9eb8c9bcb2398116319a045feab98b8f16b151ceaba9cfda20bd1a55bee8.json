{"ast":null,"code":"import SideBar from '@/components/sidebar/SideBar';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  data: () => ({\n    drawer: false,\n    headers: ['id', 'name', 'surname', 'email', 'action'],\n    users: [],\n    user: {},\n    Toast: Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    }),\n    rules: [v => !!v || 'Password is required']\n  }),\n  created() {\n    this.getUsers();\n  },\n  methods: {\n    async getUsers() {\n      await axios.get('/users').then(res => {\n        this.users = res.data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    async saveUser() {\n      if (this.user.id == undefined) {\n        await axios.post('/users/', this.user).then(() => {\n          this.getUsers();\n          this.drawer = !this.drawer;\n          this.Toast.fire({\n            icon: 'success',\n            title: 'Successfully saved'\n          });\n          this.user = {};\n        }).catch(err => {\n          console.log(err);\n          this.drawer = !this.drawer;\n          this.Toast.fire({\n            icon: 'error',\n            title: 'Something went wrong'\n          });\n          this.user = {};\n        });\n      } else {\n        await axios.patch('/users/' + this.user.id + '/', {\n          name: this.user.name,\n          surname: this.user.surname,\n          email: this.user.email,\n          password: this.user.password\n        }).then(() => {\n          this.getUsers();\n          this.drawer = !this.drawer;\n          this.Toast.fire({\n            icon: 'success',\n            title: 'Successfully updated'\n          });\n          this.user = {};\n        }).catch(err => {\n          console.log(err);\n          this.drawer = !this.drawer;\n          this.Toast.fire({\n            icon: 'error',\n            title: 'Something went wrong'\n          });\n          this.user = {};\n        });\n      }\n    },\n    async deleteUser(id) {\n      Swal.fire({\n        title: 'Are you sure?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#7FBA5E',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(res => {\n        if (res.isConfirmed) {\n          axios.delete('/users/' + id + '/').then(() => {\n            this.getUsers();\n            this.Toast.fire({\n              icon: 'success',\n              title: 'Successfully deleted'\n            });\n          }).catch(err => {\n            console.log(err);\n            this.Toast.fire({\n              icon: 'error',\n              title: 'Something went wrong'\n            });\n          });\n        }\n      });\n    },\n    async updateUser(item) {\n      this.user.id = item.id;\n      this.user.name = item.name;\n      this.user.surname = item.surname;\n      this.user.email = item.email;\n      this.user.password = item.password;\n      this.drawer = !this.drawer;\n    }\n  },\n  computed: {},\n  components: {\n    SideBar\n  }\n};","map":{"version":3,"names":["SideBar","axios","Swal","data","drawer","headers","users","user","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","rules","v","created","getUsers","methods","get","then","res","catch","err","console","log","saveUser","id","undefined","post","fire","icon","title","patch","name","surname","email","password","deleteUser","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","delete","updateUser","item","computed","components"],"sources":["C:/Projects/sport-portal-admin/src/views/pages/Users/UsersPage.js"],"sourcesContent":["import SideBar from '@/components/sidebar/SideBar';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport default {\r\n    data: () => ({\r\n        drawer: false,\r\n        headers: ['id', 'name', 'surname', 'email', 'action'],\r\n        users: [],\r\n        user: {},\r\n        Toast: Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n              toast.addEventListener('mouseenter', Swal.stopTimer)\r\n              toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        }),\r\n        rules: [\r\n            v => !!v || 'Password is required',\r\n        ],\r\n    }),\r\n    created() {\r\n        this.getUsers()\r\n    },\r\n    methods: {\r\n        async getUsers() {\r\n            await axios.get('/users')\r\n            .then((res) => {\r\n                this.users = res.data.data\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        },\r\n\r\n        async saveUser() {\r\n            if (this.user.id == undefined) {\r\n                await axios.post('/users/', this.user)\r\n                .then(() => {\r\n                    this.getUsers()\r\n                    this.drawer = !this.drawer\r\n                    this.Toast.fire({\r\n                        icon:'success',\r\n                        title: 'Successfully saved'\r\n                    })\r\n                    this.user = {}\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    this.drawer = !this.drawer\r\n                    this.Toast.fire({\r\n                        icon:'error',\r\n                        title: 'Something went wrong'\r\n                    })\r\n                    this.user = {}\r\n                })\r\n            } else {\r\n                await axios.patch('/users/' + this.user.id + '/', {\r\n                    name: this.user.name,\r\n                    surname: this.user.surname,\r\n                    email: this.user.email,\r\n                    password: this.user.password,\r\n                })\r\n                .then(() => {\r\n                    this.getUsers()\r\n                    this.drawer = !this.drawer\r\n                    this.Toast.fire({\r\n                        icon:'success',\r\n                        title: 'Successfully updated'\r\n                    })\r\n                    this.user = {}\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    this.drawer = !this.drawer\r\n                    this.Toast.fire({\r\n                        icon:'error',\r\n                        title: 'Something went wrong'\r\n                    })\r\n                    this.user = {}\r\n                })\r\n            }\r\n        },\r\n\r\n        async deleteUser(id) {\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                icon: 'question',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#7FBA5E',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!'\r\n            })\r\n            .then((res) => {\r\n                if (res.isConfirmed) {\r\n                    axios.delete('/users/' + id + '/')\r\n                    .then(() => {\r\n                        this.getUsers()\r\n                        this.Toast.fire({\r\n                            icon:'success',\r\n                            title: 'Successfully deleted'\r\n                        })\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err)\r\n                        this.Toast.fire({\r\n                            icon:'error',\r\n                            title: 'Something went wrong'\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n            \r\n        },\r\n\r\n        async updateUser(item) {\r\n            this.user.id = item.id\r\n            this.user.name = item.name\r\n            this.user.surname = item.surname\r\n            this.user.email = item.email\r\n            this.user.password = item.password\r\n            this.drawer = !this.drawer\r\n        }\r\n    },\r\n    computed: {\r\n    },\r\n    components: {\r\n        SideBar\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}