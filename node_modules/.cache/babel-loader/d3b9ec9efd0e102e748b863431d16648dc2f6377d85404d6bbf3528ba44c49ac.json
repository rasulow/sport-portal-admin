{"ast":null,"code":"import SideBar from '@/components/sidebar/SideBar';\nimport axios from 'axios';\nimport Swal from 'sweetalert2';\nexport default {\n  data: () => ({\n    drawer: false,\n    headers: ['id', 'name TM', 'name RU', 'logo', 'action'],\n    federations: [],\n    federation: {},\n    Toast: Swal.mixin({\n      toast: true,\n      position: 'top-end',\n      showConfirmButton: false,\n      timer: 1500,\n      timerProgressBar: true,\n      didOpen: toast => {\n        toast.addEventListener('mouseenter', Swal.stopTimer);\n        toast.addEventListener('mouseleave', Swal.resumeTimer);\n      }\n    }),\n    photo: null\n  }),\n  created() {\n    this.getFederations();\n  },\n  methods: {\n    async getFederations() {\n      await axios.get('/federations/', {\n        params: {\n          take: 100\n        }\n      }).then(res => {\n        this.federations = res.data.data;\n      }).catch(err => {\n        console.log(err);\n      });\n    },\n    async updateFederation(item) {\n      this.federation.id = item.id;\n      this.federation.nameTm = item.nameTm;\n      this.federation.nameRu = item.nameRu;\n      this.drawer = !this.drawer;\n    },\n    async saveFederation() {\n      let formData = new FormData();\n      formData.append('nameTm', this.federation.nameTm);\n      formData.append('nameRu', this.federation.nameRu);\n      formData.append('photo', this.photo);\n\n      // if (this.federation.id == undefined) {\n      //     await axios.post('/federations/', this.federation)\n      //     .then(() => {\n      //         this.getFederations()\n      //         this.drawer = !this.drawer\n      //         this.Toast.fire({\n      //             icon:'success',\n      //             title: 'Successfully saved'\n      //         })\n      //         this.federation = {}\n      //     })\n      //     .catch((err) => {\n      //         console.log(err)\n      //         this.drawer = !this.drawer\n      //         this.Toast.fire({\n      //             icon:'error',\n      //             title: 'Something went wrong'\n      //         })\n      //         this.federation = {}\n      //     })\n      // } else {\n      //     await axios.patch('/federations/' + this.federation.id + '/', {\n      //         nameTm: this.federation.nameTm,\n      //         nameRu: this.federation.nameRu\n      //     })\n      //     .then(() => {\n      //         this.getFederations()\n      //         this.drawer = !this.drawer\n      //         this.Toast.fire({\n      //             icon:'success',\n      //             title: 'Successfully updated'\n      //         })\n      //         this.federation = {}\n      //     })\n      //     .catch((err) => {\n      //         console.log(err)\n      //         this.drawer = !this.drawer\n      //         this.Toast.fire({\n      //             icon:'error',\n      //             title: 'Something went wrong'\n      //         })\n      //         this.federation = {}\n      //     })\n      // }\n\n      await axios.post('/federations/', formData, {\n        headers: {\n          \"Content-Type\": 'multipart/form-data'\n        }\n      }).then(() => {\n        this.Toast.fire({\n          icon: 'success',\n          title: 'Successfully saved'\n        });\n        this.federation = {};\n        this.getFederations();\n        this.drawer = !this.drawer;\n      }).catch(err => {\n        console.log(err);\n        this.federation = {};\n        this.Toast.fire({\n          icon: 'error',\n          title: 'Something went wrong'\n        });\n      });\n    },\n    async deleteFederation(id) {\n      Swal.fire({\n        title: 'Are you sure?',\n        icon: 'question',\n        showCancelButton: true,\n        confirmButtonColor: '#7FBA5E',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(res => {\n        if (res.isConfirmed) {\n          axios.delete('/federations/' + id + '/').then(() => {\n            this.getFederations();\n            this.Toast.fire({\n              icon: 'success',\n              title: 'Successfully deleted'\n            });\n          }).catch(err => {\n            console.log(err);\n            this.Toast.fire({\n              icon: 'error',\n              title: 'Something went wrong'\n            });\n          });\n        }\n      });\n    }\n  },\n  components: {\n    SideBar\n  }\n};","map":{"version":3,"names":["SideBar","axios","Swal","data","drawer","headers","federations","federation","Toast","mixin","toast","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","photo","created","getFederations","methods","get","params","take","then","res","catch","err","console","log","updateFederation","item","id","nameTm","nameRu","saveFederation","formData","FormData","append","post","fire","icon","title","deleteFederation","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","delete","components"],"sources":["C:/Projects/sport-portal-admin/src/views/pages/Federation/FederationPage.js"],"sourcesContent":["import SideBar from '@/components/sidebar/SideBar';\r\nimport axios from 'axios';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport default {\r\n    data: () => ({\r\n        drawer: false,\r\n        headers: ['id', 'name TM', 'name RU', 'logo', 'action'],\r\n        federations: [],\r\n        federation: {},\r\n        Toast: Swal.mixin({\r\n            toast: true,\r\n            position: 'top-end',\r\n            showConfirmButton: false,\r\n            timer: 1500,\r\n            timerProgressBar: true,\r\n            didOpen: (toast) => {\r\n              toast.addEventListener('mouseenter', Swal.stopTimer)\r\n              toast.addEventListener('mouseleave', Swal.resumeTimer)\r\n            }\r\n        }),\r\n        photo: null,\r\n    }),\r\n    created() {\r\n        this.getFederations()\r\n    },\r\n    methods: {\r\n        async getFederations() {\r\n            await axios.get('/federations/', { params: { take: 100 } })\r\n            .then((res) => {\r\n                this.federations = res.data.data\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n        },\r\n\r\n        async updateFederation(item) {\r\n            this.federation.id = item.id\r\n            this.federation.nameTm = item.nameTm\r\n            this.federation.nameRu = item.nameRu\r\n            this.drawer = !this.drawer\r\n        },\r\n\r\n        async saveFederation() {\r\n            let formData = new FormData()\r\n\r\n            formData.append('nameTm', this.federation.nameTm)\r\n            formData.append('nameRu', this.federation.nameRu)\r\n            formData.append('photo', this.photo)\r\n\r\n            // if (this.federation.id == undefined) {\r\n            //     await axios.post('/federations/', this.federation)\r\n            //     .then(() => {\r\n            //         this.getFederations()\r\n            //         this.drawer = !this.drawer\r\n            //         this.Toast.fire({\r\n            //             icon:'success',\r\n            //             title: 'Successfully saved'\r\n            //         })\r\n            //         this.federation = {}\r\n            //     })\r\n            //     .catch((err) => {\r\n            //         console.log(err)\r\n            //         this.drawer = !this.drawer\r\n            //         this.Toast.fire({\r\n            //             icon:'error',\r\n            //             title: 'Something went wrong'\r\n            //         })\r\n            //         this.federation = {}\r\n            //     })\r\n            // } else {\r\n            //     await axios.patch('/federations/' + this.federation.id + '/', {\r\n            //         nameTm: this.federation.nameTm,\r\n            //         nameRu: this.federation.nameRu\r\n            //     })\r\n            //     .then(() => {\r\n            //         this.getFederations()\r\n            //         this.drawer = !this.drawer\r\n            //         this.Toast.fire({\r\n            //             icon:'success',\r\n            //             title: 'Successfully updated'\r\n            //         })\r\n            //         this.federation = {}\r\n            //     })\r\n            //     .catch((err) => {\r\n            //         console.log(err)\r\n            //         this.drawer = !this.drawer\r\n            //         this.Toast.fire({\r\n            //             icon:'error',\r\n            //             title: 'Something went wrong'\r\n            //         })\r\n            //         this.federation = {}\r\n            //     })\r\n            // }\r\n\r\n            await axios.post('/federations/', formData, {\r\n                headers: {\r\n                    \"Content-Type\": 'multipart/form-data'\r\n                }\r\n            })\r\n                .then(() => {\r\n                    this.Toast.fire({\r\n                        icon:'success',\r\n                        title: 'Successfully saved'\r\n                    })\r\n                    this.federation = {}\r\n                    this.getFederations()\r\n                    this.drawer = !this.drawer\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err)\r\n                    this.federation = {}\r\n                    this.Toast.fire({\r\n                        icon:'error',\r\n                        title: 'Something went wrong'\r\n                    })\r\n                })\r\n\r\n        },\r\n\r\n\r\n        async deleteFederation(id) {\r\n            Swal.fire({\r\n                title: 'Are you sure?',\r\n                icon: 'question',\r\n                showCancelButton: true,\r\n                confirmButtonColor: '#7FBA5E',\r\n                cancelButtonColor: '#d33',\r\n                confirmButtonText: 'Yes, delete it!'\r\n            })\r\n            .then((res) => {\r\n                if (res.isConfirmed) {\r\n                    axios.delete('/federations/' + id + '/')\r\n                    .then(() => {\r\n                        this.getFederations()\r\n                        this.Toast.fire({\r\n                            icon:'success',\r\n                            title: 'Successfully deleted'\r\n                        })\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err)\r\n                        this.Toast.fire({\r\n                            icon:'error',\r\n                            title: 'Something went wrong'\r\n                        })\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    },\r\n    components: {\r\n        SideBar\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}